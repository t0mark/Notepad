# Husky A200 매뉴얼 기준 로봇 크기 설정
footprint: [[-0.495, -0.335], [-0.495, 0.335], [0.495, 0.335], [0.495, -0.335]]
footprint_padding: 0.01


robot_base_frame: base_link
update_frequency: 10.0
publish_frequency: 3.0
transform_tolerance: 0.5

resolution: 0.05

obstacle_range: 5.5
raytrace_range: 6.0

obstacles_laser:
    observation_sources: laser
    laser: {data_type: LaserScan, clearing: true, marking: true, topic: /scan, inf_is_valid: true,
            obstacle_range: 40,
            raytrace_range: 45,
            observation_persistence: 0}
    
# 인플레이션 레이어 설정  [장애물 주변에 추가적인 안전 영역(비용)을 부여하는 레이어입니다.]
inflation_layer:
  enabled: true              # 인플레이션 레이어 활성화 
  #cost_scaling_factor: 5.0   # 비용 감소 비율
  inflation_radius: 2.0      # 장애물 주변 인플레이션 반경 (m)


# combination_method: 1
# 이 파라미터는 여러 costmap 레이어(예: static_layer, obstacle_layer 등)가 결합될 때, 각 셀의 비용(cost)을 어떻게 합성할지 결정합니다.
# 값이 **1(최대값, Maximum)**이면, 여러 레이어 중에서 가장 높은(위험도가 큰) 값을 선택합니다. 
# 즉, static_layer에서 이미 장애물로 표시된 곳에 obstacle_layer에서 더 높은 비용이 들어오면, 그 높은 값이 최종 costmap에 반영됩니다. 
# 이 방식은 장애물 정보를 보수적으로 합성하여, 로봇이 더 안전하게 경로를 선택하도록 합니다.

# 값이 **0(평균값, Overwrite)**이면, obstacle_layer의 값이 static_layer의 값을 덮어쓰게 됩니다. 
# 즉, obstacle_layer에서 관측한 정보가 static_layer의 정보를 무시하고 그대로 costmap에 반영됩니다. 
# 이 경우, 센서로 관측되지 않은 영역의 static_layer 정보가 사라질 수 있습니다.
# 일반적으로 **1(최대값)**이 기본값이며, 두 레이어의 정보를 모두 활용해 더 안전한 경로 계획이 가능합니다.


# track_unknown_space: true
# 이 파라미터가 true이면, 센서로 관측되지 않아 정보가 없는(unknown) 공간을 costmap에서 별도로 표시합니다. 
# 즉, 장애물도 아니고 자유 공간도 아닌 곳을 '알 수 없음'으로 표시하여, 로봇이 경로 계획 시 해당 공간을 피하거나 주의해서 다루게 합니다.
# 이 값이 false이면, unknown 공간을 자유 공간(free space)으로 간주하여 경로를 생성할 수 있습니다. 
# 하지만 이 경우, 로봇이 미탐색 영역을 무분별하게 통과할 수 있기 때문에, 일반적으로 안전을 위해 true로 설정합니다.
# 특히, exploration(탐사) 패키지(explore_lite 등)에서는 이 값을 true로 해야 미탐색 영역으로 경로를 생성할 수 있습니다.


# obstacle_range
# 센서로부터 이 거리 이내에 감지된 장애물만 costmap에 장애물로 등록합니다.
# 즉, 로봇이 장애물로 인식하고 경로 계획에 반영하는 최대 거리입니다. 
# 예를 들어, 10m로 설정하면 10m 이내의 장애물만 costmap에 표시됩니다

# raytrace_range
# 센서로부터 이 거리까지 장애물이 없다고 확인된 구간을 costmap에서 '자유 공간(free space)'으로 클리어(장애물 제거)합니다.
# 즉, 장애물이 없음을 확실하게 알 수 있는 최대 거리입니다. 
# 이 값이 obstacle_range보다 크면, 장애물은 10m 이내에서만 표시하지만, 장애물이 없다는 정보는 10m까지 costmap에 반영할 수 있습니다