<?xml version="1.0"?>
<launch>
  <!-- Ouster sensor launch file - Topics only (no TF frames, no RViz) -->
  
  <arg name="ouster_ns" default="ouster" doc="Override the default namespace of all ouster nodes"/>
  <arg name="sensor_hostname" default="192.168.10.11" doc="hostname"/>
  <arg name="udp_dest" default="192.168.10.10" doc="hostname or IP where the sensor will send data packets"/>
  <arg name="lidar_port" default="0" doc="port to which the sensor should send lidar data"/>
  <arg name="imu_port" default="0" doc="port to which the sensor should send imu data"/>
  <arg name="udp_profile_lidar" default=" "
    doc="lidar packet profile; possible values: {
    LEGACY,
    RNG19_RFL8_SIG16_NIR16,
    RNG15_RFL8_NIR8
    RNG19_RFL8_SIG16_NIR16_DUAL,
    FUSA_RNG15_RFL8_NIR8_DUAL
    }"/>
  <arg name="lidar_mode" default="1024x10"
    doc="resolution and rate; possible values: {
    512x10,
    512x20,
    1024x10,
    1024x20,
    2048x10,
    4096x5
    }"/>
  <arg name="timestamp_mode" default="TIME_FROM_ROS_TIME"
    doc="method used to timestamp measurements; possible values: {
    TIME_FROM_INTERNAL_OSC,
    TIME_FROM_SYNC_PULSE_IN,
    TIME_FROM_PTP_1588,
    TIME_FROM_ROS_TIME
    }"/>
  <arg name="ptp_utc_tai_offset" default="-37.0"
    doc="UTC/TAI offset in seconds to apply when using TIME_FROM_PTP_1588"/>

  <arg name="metadata" default=" " doc="path to write metadata file when receiving sensor data"/>
  
  <!-- Disable visualization and TF frames -->
  <arg name="viz" default="false" doc="whether to run a rviz"/>
  <arg name="pub_static_tf" default="false" doc="disable static TF publishing"/>

  <arg name="no_bond" default="false"
    doc="request no bond setup when nodelets are created"/>
  <arg if="$(arg no_bond)" name="_no_bond" value="--no-bond"/>
  <arg unless="$(arg no_bond)" name="_no_bond" value=" "/>

  <arg name="proc_mask" default="PCL|IMU|SCAN|TLM" doc="
    Only enable point cloud, IMU, scan, and telemetry topics
    (IMG flag removed to disable image topics)"/>

  <arg name="point_type" default="original"
    doc="point type for the generated point cloud; available options: {
    original,
    native,
    xyz,
    xyzi,
    o_xyzi,
    xyzir
    }"/>

  <arg name="azimuth_window_start" default="0" doc="azimuth window start;
    values range [0, 360000] millidegrees"/>
  <arg name="azimuth_window_end" default="360000" doc="azimuth window end;
    values range [0, 360000] millidegrees"/>

  <arg name="persist_config" default="false"
    doc="request the sensor to persist settings"/>

  <arg name="attempt_reconnect" default="false"
    doc="attempting to reconnect to the sensor after connection loss or
    sensor powered down"/>
  <arg name="dormant_period_between_reconnects" default="1.0"
    doc="wait time in seconds between reconnection attempts"/>
  <arg name="max_failed_reconnect_attempts" default="2147483647"
    doc="maximum number of attempts trying to communicate with the sensor.
         Counter resets upon successful connection"/>

  <arg name="organized" default="true"
    doc="generate an organzied point cloud"/>
  <arg name="destagger" default="true"
    doc="enable or disable point cloud destaggering"/>

  <arg name="min_range" default="0.0"
    doc="minimum lidar range to consider (meters)"/>
  <arg name="max_range" default="10000.0"
    doc="maximum lidar range to consider (meters)"/>

  <arg name="min_scan_valid_columns_ratio" default="0.0"
    doc="The minimum ratio of valid columns for processing the LidarScan [0, 1]"/>

  <arg name="v_reduction" default="1"
    doc="vertical beam reduction; available options: {1, 2, 4, 8, 16}"/>

  <!-- Ouster nodelet manager -->
  <group ns="$(arg ouster_ns)">
    <node pkg="nodelet" type="nodelet" name="os_nodelet_mgr"
      output="screen" required="true" args="manager"/>
  </group>

  <!-- Ouster sensor node -->
  <group ns="$(arg ouster_ns)">
    <node pkg="nodelet" type="nodelet" name="os_node"
      output="screen" required="true"
      args="load ouster_ros/OusterSensor os_nodelet_mgr $(arg _no_bond)">
      <param name="~/sensor_hostname" type="str" value="$(arg sensor_hostname)"/>
      <param name="~/udp_dest" type="str" value="$(arg udp_dest)"/>
      <param name="~/lidar_port" type="int" value="$(arg lidar_port)"/>
      <param name="~/imu_port" type="int" value="$(arg imu_port)"/>
      <param name="~/udp_profile_lidar" type="str" value="$(arg udp_profile_lidar)"/>
      <param name="~/lidar_mode" type="str" value="$(arg lidar_mode)"/>
      <param name="~/timestamp_mode" type="str" value="$(arg timestamp_mode)"/>
      <param name="~/ptp_utc_tai_offset" type="double"
        value="$(arg ptp_utc_tai_offset)"/>
      <param name="~/metadata" type="str" value="$(arg metadata)"/>
      <param name="~/proc_mask" type="str" value="$(arg proc_mask)"/>
      <param name="~/azimuth_window_start" value="$(arg azimuth_window_start)"/>
      <param name="~/azimuth_window_end" value="$(arg azimuth_window_end)"/>
      <param name="~/persist_config" value="$(arg persist_config)"/>
      <param name="~/attempt_reconnect" value="$(arg attempt_reconnect)"/>
      <param name="~/dormant_period_between_reconnects"
             value="$(arg dormant_period_between_reconnects)"/>
      <param name="~/max_failed_reconnect_attempts"
             value="$(arg max_failed_reconnect_attempts)"/>
    </node>
  </group>

  <!-- Ouster point cloud processor (topics only, no TF) -->
  <group ns="$(arg ouster_ns)">
    <node pkg="nodelet" type="nodelet" name="os_cloud_node"
      output="screen" required="true"
      args="load ouster_ros/OusterCloud os_nodelet_mgr $(arg _no_bond)">
      <param name="~/pub_static_tf" value="false"/>
      <param name="~/timestamp_mode" type="str" value="$(arg timestamp_mode)"/>
      <param name="~/ptp_utc_tai_offset" type="double"
        value="$(arg ptp_utc_tai_offset)"/>
      <param name="~/proc_mask" type="str" value="$(arg proc_mask)"/>
      <param name="~/point_type" type="str" value="$(arg point_type)"/>
      <param name="~/organized" value="$(arg organized)"/>
      <param name="~/destagger" value="$(arg destagger)"/>
      <param name="~/min_range" value="$(arg min_range)"/>
      <param name="~/max_range" value="$(arg max_range)"/>
      <param name="~/v_reduction" value="$(arg v_reduction)"/>
      <param name="~/min_scan_valid_columns_ratio"
          value="$(arg min_scan_valid_columns_ratio)"/>
    </node>
  </group>

</launch>