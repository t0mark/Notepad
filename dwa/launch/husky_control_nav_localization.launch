<?xml version="1.0"?>
<launch>
  
  <param name="/use_sim_time" value="true" />

  <!-- ===== 로봇 제어, 네비게이션, localization 및 모니터링 담당 ===== -->
  <!-- 환경 독립적: 시뮬레이션과 실제 환경에서 동일하게 사용 -->

  <arg name="enable_ekf" default="false"/>
  <arg name="config_extras" default="$(eval optenv('HUSKY_CONFIG_EXTRAS', find('husky_control') + '/config/empty.yaml'))"/>

  <!-- Load robot description -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find husky_description)/urdf/husky.urdf.xacro'" />

  <!-- Load controller configuration -->
  <rosparam command="load" file="$(find husky_control)/config/control.yaml" />
  <rosparam command="load" file="$(find husky_control)/config/teleop_ps4.yaml" />

  <!-- Spawn controllers -->
  <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
        args="husky_joint_publisher husky_velocity_controller"/>
  <rosparam param="wheel_radius_multiplier" ns="husky_velocity_controller" subst_value="True">
        $(optenv HUSKY_WHEEL_MULTIPLIER 1.0)
  </rosparam>

  <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen">
    <param name="link_name" value="base_link" />
  </node>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="use_tf_static" value="false"/>
    <param name="publish_frequency" value="50"/>
  </node>

  <!-- 조이스틱 조종을 우선순위로 설정할수 있는 노드 -->
  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find husky_control)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="husky_velocity_controller/cmd_vel"/>
  </node>

  <!-- Override the default control parameters, see config/empty.yaml for default. -->
  <rosparam command="load" file="$(arg config_extras)" subst_value="true" />

  <!-- ===== Faster-LIO Localization (Ouster 32) ===== -->
  <include file="$(find faster_lio)/launch/mapping_ouster32.launch">
  </include>

  <!-- ===== 포인트 클라우드 처리 파이프라인 ===== -->
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />
  <!-- Ouster 데이터 다운샘플링을 위한 VoxelGrid 필터 -->
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/ouster/points" />
    <remap from="~output" to="/points_filtered" />
    <param name="leaf_size" value="0.10" />
    <param name="filter_field_name" value="z" />
    <param name="filter_limit_min" value="-0.85" />
    <param name="filter_limit_max" value="2" />
  </node>

  <!-- PointCloud2를 LaserScan으로 변환 -->
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
    <remap from="cloud_in" to="/points_filtered"/>
    <remap from="scan" to="/scan"/>
    <param name="angle_min" value="-3.14159"/>
    <param name="angle_max" value="3.14159"/>
    <param name="min_height" value="-2"/>
    <param name="max_height" value="3"/>
    <param name="angle_increment" value="0.01"/>
  </node>

  <!-- ===== DWA Navigation (Move Base) ===== -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <!-- Costmap 설정 -->
    <rosparam file="$(find husky_dwa_navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find husky_dwa_navigation)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find husky_dwa_navigation)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find husky_dwa_navigation)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find husky_dwa_navigation)/config/robot_dynamics_params.yaml" command="load" />
    <rosparam file="$(find husky_dwa_navigation)/config/path_planning_params.yaml" command="load" />
  </node>

  <!-- ===== Navigation Manager ===== -->
  <node pkg="husky_dwa_navigation" type="navigation_manager.py" name="navigation_manager" output="screen">
    <param name="global_costmap_topic" value="/move_base/global_costmap/costmap" />
    <param name="robot_base_frame" value="base_link" />
    <param name="switch_service" value="/move_base/set_parameters" />
    <param name="planner_type_parameter" value="/move_base/base_global_planner" />
    <param name="default_planner" value="global_planner/GlobalPlanner" />
    <param name="check_frequency" value="5.0" />
    <param name="border_tolerance" value="1.0" />
  </node>

  <!-- ===== RViz 시각화 ===== -->
  <node name="rviz" pkg="rviz" type="rviz" 
        args="-d $(find faster_lio)/rviz_cfg/loam_livox.rviz" 
        output="screen" />
</launch>