<?xml version="1.0"?>
<launch>
  <!-- 통합 자율주행 시스템: Faster-LIO + DWA + Kakao API -->

  <!-- 시뮬레이션 시간 설정 -->
  <param name="use_sim_time" value="true"/>

  <!-- ===== 1. 로봇 제어 계층 ===== -->
  <arg name="enable_ekf" default="false"/>
  <arg name="config_extras" default="$(eval optenv('HUSKY_CONFIG_EXTRAS', find('husky_control') + '/config/empty.yaml'))"/>

  <!-- Load controller configuration -->
  <rosparam command="load" file="$(find husky_control)/config/control.yaml"/>
  <rosparam command="load" file="$(find husky_control)/config/teleop_ps4.yaml"/>

  <!-- Spawn controllers -->
  <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
        args="husky_joint_publisher husky_velocity_controller"/>
  <rosparam param="wheel_radius_multiplier" ns="husky_velocity_controller" subst_value="True">
        $(optenv HUSKY_WHEEL_MULTIPLIER 1.0)
  </rosparam>

  <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen">
    <param name="link_name" value="base_link"/>
  </node>

  <!-- 조이스틱 조종을 우선순위로 설정할 수 있는 노드 -->
  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find husky_control)/config/twist_mux.yaml"/>
    <remap from="cmd_vel_out" to="husky_velocity_controller/cmd_vel"/>
  </node>

  <!-- Override the default control parameters -->
  <rosparam command="load" file="$(arg config_extras)" subst_value="true"/>

  <!-- ===== 2. Faster-LIO Localization ===== -->
  <include file="$(find faster_lio)/launch/mapping_ouster32.launch"/>

  <!-- ===== 3. 통합 좌표계 및 동기화 스크립트 (integrated_navigation 고유 기능) ===== -->

  <!-- UTM Local 좌표계 설정 및 GPS-FasterLIO 동기화 -->
  <node pkg="integrated_navigation" type="utils/make_frame.py" name="make_frame_node" output="screen"/>

  <!-- FasterLIO-GPS 융합 위치 추정 및 Heading 보정 -->
  <node pkg="integrated_navigation" type="utils/initialize_pose.py" name="initialize_pose_node" output="screen"/>

  <!-- 경로 및 웨이포인트 시각화 전용 -->
  <node pkg="integrated_navigation" type="navigation/path_visualizer.py" name="path_visualizer_node" output="screen"/>

  <!-- ===== 4. DWA Navigation (센서 처리 포함) ===== -->
  <include file="$(find dwa)/launch/dwa_navigation.launch">
    <arg name="global_frame" value="utm_local"/>
  </include>

  <!-- ===== 5. Kakao API (GPS 서버 및 웨이포인트 관리) ===== -->
  <include file="$(find kakao_api)/launch/kakao_api.launch"/>

  <!-- ===== 6. RViz 시각화 ===== -->
  <node name="rviz" pkg="rviz" type="rviz"
        args="-d $(find faster_lio)/rviz_cfg/loam_livox.rviz"
        output="screen"/>

</launch>
